import { TextEdit } from "std-widgets.slint";
import { TextEditImproved, HighlightToken } from "./textedit-improved.slint";
import { MemoryTile } from "./memory-tile.slint";
import "./fonts/FiraCode-Regular.ttf";
import "./fonts/FiraCode-Medium.ttf";
import "./fonts/FiraCode-Bold.ttf";

export struct TileData {
    image: image,
    image_visible: bool,
    solved: bool,
}

export component HelloWorld inherits Window {
    title: "Kelley";
    default-font-family: "Fira Code";
    default-font-weight: 500;
    default-font-size: 14px;
    width: 600px;
    height: 400px;

    in-out property <string> text <=> i-editor.text;
    in property <[HighlightToken]> highlight_tokens <=> i-editor.highlight_tokens;
    callback edited(string);

    callback check_if_pair_solved();
    in property <bool> disable_tiles;

    in property <[TileData]> memory_tiles: [
        { image: @image-url("icons/at.png") },
        { image: @image-url("icons/balance-scale.png") },
        { image: @image-url("icons/bicycle.png") },
        { image: @image-url("icons/bus.png") },
        { image: @image-url("icons/cloud.png") },
        { image: @image-url("icons/cogs.png") },
        { image: @image-url("icons/motorcycle.png") },
        { image: @image-url("icons/video.png") },
    ];

    // for tile[i] in memory_tiles : MemoryTile {
    //     x: mod(i, 4) * 74px;
    //     y: floor(i / 4) * 74px;
    //     width: 64px;
    //     height: 64px;
    //     icon: tile.image;
    //     open_curtain: tile.image_visible || tile.solved;
    //     // propagate the solved status from the model to the tile
    //     solved: tile.solved;
    //     clicked => {
    //         if (!root.disable_tiles) {
    //             tile.image_visible = !tile.image_visible;
    //             root.check_if_pair_solved();
    //         }
    //     }
    // }

    i-editor := TextEditImproved {
        font-size: 14px;
        width: parent.width;
        height: parent.height;
        wrap: no-wrap;

        edited => {
            root.edited(self.text);
        }
    }
}
